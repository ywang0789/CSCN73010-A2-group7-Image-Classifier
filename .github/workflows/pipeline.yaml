name: Pipeline Actions

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Analyzing
        run: |
          for file in $(git ls-files '*.py'); do
            pylint --ignore=unit_test.py,integration_test.py,acceptance_test.py,setup.py,capacity_test.py "$file"
          done

  build:
    runs-on: ubuntu-latest
    needs: pre-commit
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Package creation
        run: |
          python -m pip install --upgrade build
          python -m build

      - name: Archive package
        uses: actions/upload-artifact@v4
        with:
          name: image-classifier
          path: dist

  unit-test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: image-classifier
          path: dist

      - name: Install whl files
        run: |
          python -m pip install dist/*.whl

      - name: Install dependencies
        run: |
          pip install -r ./tests/test_requirements.txt

      - name: Run unit tests
        run: |
          pytest -v ./tests/unit_test.py

  integration-test:
    runs-on: ubuntu-latest
    needs: unit-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: image-classifier
          path: dist

      - name: Install whl files
        run: |
          python -m pip install dist/*.whl

      - name: Install dependencies
        run: |
          pip install -r ./tests/test_requirements.txt

      - name: Run integration tests
        run: |
          pytest -v ./tests/integration_test.py

  acceptance-test:
    runs-on: ubuntu-latest
    needs: integration-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: image-classifier
          path: dist

      - name: Install whl files
        run: |
          python -m pip install dist/*.whl

      - name: Install dependencies
        run: |
          pip install -r ./tests/test_requirements.txt

      - name: Run acceptance tests
        run: |
          pytest -v ./tests/acceptance_test.py
  
          name: Python Test

  capacitytest:
    runs-on: ubuntu-latest
    needs: acceptance-test
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r ./tests/test_requirements.txt
        pip install -r requirements.txt

    - name: Run flask app
      working-directory: ./
      run: python app.py & sleep 10

    - name: Run tests
      working-directory: ./
      run: locust -f ./tests/capacity_test.py --headless -u 1 -r 1 --host http://localhost:5000 --run-time 1m --html=locustreport.html

    - name: Archive capacity test report
      uses: actions/upload-artifact@v4
      with:
        name: capacitytestreport
        path: locustreport.html

  docker-push:
    runs-on: ubuntu-latest
    needs: acceptance-test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Docker Hub Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ywang0789/group7-image-classifier:latest
